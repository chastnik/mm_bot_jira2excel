#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–æ–π –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ Jira
"""

import os
import sys
import logging
from datetime import datetime
from user_auth import UserAuthManager
from jira_client import JiraClient
from config import Config

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO, format='%(asctime)s - %(levelname)s - %(message)s')
logger = logging.getLogger(__name__)

def test_user_auth():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–æ–π –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏"""
    
    print("üîê –¢–µ—Å—Ç –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–æ–π –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π\n")
    
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
        Config.validate()
        print(f"‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è OK. Jira URL: {Config.JIRA_URL}\n")
        
        # –°–æ–∑–¥–∞–µ–º –º–µ–Ω–µ–¥–∂–µ—Ä –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
        auth_manager = UserAuthManager()
        print("‚úÖ UserAuthManager —Å–æ–∑–¥–∞–Ω\n")
        
        # –¢–µ—Å—Ç–æ–≤—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏
        test_users = [
            {"id": "user1", "username": "test_user1", "password": "fake_password_1"},
            {"id": "user2", "username": "test_user2", "password": "fake_password_2"},
        ]
        
        # –¢–µ—Å—Ç 1: –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–∑–Ω–∞—á–∞–ª—å–Ω–æ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è
        print("üìã –¢–µ—Å—Ç 1: –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–∑–Ω–∞—á–∞–ª—å–Ω–æ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è")
        for user in test_users:
            authenticated = auth_manager.is_user_authenticated(user["id"])
            print(f"  –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user['id']}: {'‚úÖ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω' if authenticated else '‚ùå –Ω–µ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω'}")
        
        print(f"  –í—Å–µ–≥–æ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö: {auth_manager.get_authenticated_users_count()}\n")
        
        # –¢–µ—Å—Ç 2: –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —É—á–µ—Ç–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
        print("üìã –¢–µ—Å—Ç 2: –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —É—á–µ—Ç–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö")
        for user in test_users:
            auth_manager.save_user_credentials(user["id"], user["username"], user["password"])
            print(f"  ‚úÖ –°–æ—Ö—Ä–∞–Ω–µ–Ω—ã –¥–∞–Ω–Ω—ã–µ –¥–ª—è {user['id']}")
        
        print(f"  –í—Å–µ–≥–æ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö: {auth_manager.get_authenticated_users_count()}\n")
        
        # –¢–µ—Å—Ç 3: –ü–æ–ª—É—á–µ–Ω–∏–µ —É—á–µ—Ç–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
        print("üìã –¢–µ—Å—Ç 3: –ü–æ–ª—É—á–µ–Ω–∏–µ —É—á–µ—Ç–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö")
        for user in test_users:
            username, password = auth_manager.get_user_credentials(user["id"])
            if username and password:
                print(f"  ‚úÖ {user['id']}: username={username}, password={'*' * len(password)}")
            else:
                print(f"  ‚ùå {user['id']}: —É—á–µ—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
        print()
        
        # –¢–µ—Å—Ç 4: –†–∞–±–æ—Ç–∞ —Å —Å–µ—Å—Å–∏—è–º–∏
        print("üìã –¢–µ—Å—Ç 4: –†–∞–±–æ—Ç–∞ —Å —Å–µ—Å—Å–∏—è–º–∏")
        auth_manager.update_user_session("user1", 
            step="project_selection", 
            projects=["PROJ1", "PROJ2"],
            test_data="some_data"
        )
        
        session = auth_manager.get_user_session("user1")
        print(f"  ‚úÖ –°–µ—Å—Å–∏—è user1: {session}\n")
        
        # –¢–µ—Å—Ç 5: –£–¥–∞–ª–µ–Ω–∏–µ —É—á–µ—Ç–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
        print("üìã –¢–µ—Å—Ç 5: –£–¥–∞–ª–µ–Ω–∏–µ —É—á–µ—Ç–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö")
        auth_manager.remove_user_credentials("user1")
        print(f"  ‚úÖ –£–¥–∞–ª–µ–Ω—ã –¥–∞–Ω–Ω—ã–µ –¥–ª—è user1")
        
        authenticated = auth_manager.is_user_authenticated("user1")
        print(f"  user1 –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω: {'‚úÖ –¥–∞' if authenticated else '‚ùå –Ω–µ—Ç'}")
        print(f"  –í—Å–µ–≥–æ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö: {auth_manager.get_authenticated_users_count()}\n")
        
        # –¢–µ—Å—Ç 6: –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —à–∏—Ñ—Ä–æ–≤–∞–Ω–∏—è (–ø—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–∞–π–ª)
        print("üìã –¢–µ—Å—Ç 6: –ü—Ä–æ–≤–µ—Ä–∫–∞ —à–∏—Ñ—Ä–æ–≤–∞–Ω–∏—è –≤ —Ñ–∞–π–ª–µ")
        try:
            with open('user_sessions.json', 'r') as f:
                content = f.read()
                if 'test_user2' in content:
                    print("  ‚ùå –ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞–π–¥–µ–Ω–æ –≤ –æ—Ç–∫—Ä—ã—Ç–æ–º –≤–∏–¥–µ –≤ —Ñ–∞–π–ª–µ!")
                else:
                    print("  ‚úÖ –ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –≤ –æ—Ç–∫—Ä—ã—Ç–æ–º –≤–∏–¥–µ - –¥–∞–Ω–Ω—ã–µ –∑–∞—à–∏—Ñ—Ä–æ–≤–∞–Ω—ã")
                    
                if 'fake_password' in content:
                    print("  ‚ùå –ü–∞—Ä–æ–ª—å –Ω–∞–π–¥–µ–Ω –≤ –æ—Ç–∫—Ä—ã—Ç–æ–º –≤–∏–¥–µ –≤ —Ñ–∞–π–ª–µ!")
                else:
                    print("  ‚úÖ –ü–∞—Ä–æ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –æ—Ç–∫—Ä—ã—Ç–æ–º –≤–∏–¥–µ - –¥–∞–Ω–Ω—ã–µ –∑–∞—à–∏—Ñ—Ä–æ–≤–∞–Ω—ã")
        except FileNotFoundError:
            print("  ‚ÑπÔ∏è  –§–∞–π–ª —Å–µ—Å—Å–∏–π –Ω–µ –Ω–∞–π–¥–µ–Ω")
        print()
        
        # –†–µ–∞–ª—å–Ω—ã–π —Ç–µ—Å—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è (–µ—Å–ª–∏ –≤–≤–µ–¥–µ–Ω—ã –Ω–∞—Å—Ç–æ—è—â–∏–µ –¥–∞–Ω–Ω—ã–µ)
        if len(sys.argv) > 1 and sys.argv[1] == "--real-test":
            print("üìã –†–µ–∞–ª—å–Ω—ã–π —Ç–µ—Å—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Jira")
            
            username = input("–í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è Jira: ").strip()
            password = input("–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –ø–∞—Ä–æ–ª—å: ").strip()
            
            if username and password:
                print("üîÑ –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ...")
                jira_client = JiraClient()
                success, message = jira_client.test_connection(username, password)
                
                if success:
                    print(f"‚úÖ {message}")
                    
                    # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ –∫–ª–∏–µ–Ω—Ç–∞ —Å —É—á–µ—Ç–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏
                    jira_client_auth = JiraClient(username, password)
                    projects = jira_client_auth.get_projects()
                    print(f"‚úÖ –ü–æ–ª—É—á–µ–Ω–æ {len(projects)} –ø—Ä–æ–µ–∫—Ç–æ–≤")
                    
                    if projects:
                        print("üìã –ü–µ—Ä–≤—ã–µ 5 –ø—Ä–æ–µ–∫—Ç–æ–≤:")
                        for project in projects[:5]:
                            print(f"  ‚Ä¢ {project['key']} - {project['name']}")
                else:
                    print(f"‚ùå {message}")
            else:
                print("‚ùå –ù–µ –≤–≤–µ–¥–µ–Ω—ã –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–ª–∏ –ø–∞—Ä–æ–ª—å")
        
        print("\nüéâ –í—Å–µ —Ç–µ—Å—Ç—ã –∑–∞–≤–µ—Ä—à–µ–Ω—ã!")
        
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–µ: {e}")
        print(f"\n‚ùå –û—à–∏–±–∫–∞: {e}")

def cleanup():
    """–û—á–∏—Å—Ç–∫–∞ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö"""
    try:
        if os.path.exists('user_sessions.json'):
            os.remove('user_sessions.json')
            print("üóëÔ∏è  –¢–µ—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª —Å–µ—Å—Å–∏–π —É–¥–∞–ª–µ–Ω")
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –æ—á–∏—Å—Ç–∫–∏: {e}")

if __name__ == "__main__":
    print("–ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–æ–π –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏")
    print("–î–ª—è —Ä–µ–∞–ª—å–Ω–æ–≥–æ —Ç–µ—Å—Ç–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Jira –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ: python test_user_auth.py --real-test")
    print("(–±—É–¥–µ—Ç –∑–∞–ø—Ä–æ—à–µ–Ω–æ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –ø–∞—Ä–æ–ª—å –¥–ª—è Jira)\n")
    
    try:
        test_user_auth()
    finally:
        cleanup_input = input("\n–û—á–∏—Å—Ç–∏—Ç—å —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ? (y/N): ").strip().lower()
        if cleanup_input == 'y':
            cleanup() 